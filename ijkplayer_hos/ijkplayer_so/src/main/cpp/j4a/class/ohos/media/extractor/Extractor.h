/*
 * Copyright (C) 2015 Zhang Rui <bbcallen@gmail.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * https://github.com/Bilibili/jni4android
 * This file is automatically generated by jni4android, do not modify.
 */

#ifndef J4A__ohos_media_extractor_Extractor__H
#define J4A__ohos_media_extractor_Extractor__H

#include "j4a/j4a_base.h"

jobject J4AC_ohos_media_extractor_Extractor__Extractor(JNIEnv *env);
jobject J4AC_ohos_media_extractor_Extractor__Extractor__catchAll(JNIEnv *env);
jobject J4AC_ohos_media_extractor_Extractor__Extractor__asGlobalRef__catchAll(JNIEnv *env);
jboolean J4AC_ohos_media_extractor_Extractor__setSource(JNIEnv *env, jobject thiz, jobject source);
jboolean J4AC_ohos_media_extractor_Extractor__setSource__catchAll(JNIEnv *env, jobject thiz, jobject source);
jint J4AC_ohos_media_extractor_Extractor__getTotalStreams(JNIEnv *env, jobject thiz);
jint J4AC_ohos_media_extractor_Extractor__getTotalStreams__catchAll(JNIEnv *env, jobject thiz);
jobject J4AC_ohos_media_extractor_Extractor__getStreamFormat(JNIEnv *env, jobject thiz, jint id);
jobject J4AC_ohos_media_extractor_Extractor__getStreamFormat__catchAll(JNIEnv *env, jobject thiz, jint id);
jobject J4AC_ohos_media_extractor_Extractor__getStreamFormat__asGlobalRef__catchAll(JNIEnv *env, jobject thiz, jint id);
jboolean J4AC_ohos_media_extractor_Extractor__specifyStream(JNIEnv *env, jobject thiz, jint id);
jboolean J4AC_ohos_media_extractor_Extractor__specifyStream__catchAll(JNIEnv *env, jobject thiz, jint id);
jint J4AC_ohos_media_extractor_Extractor__getIntValue(JNIEnv *env, jobject thiz, jstring key);
jint J4AC_ohos_media_extractor_Extractor__getIntValue__catchAll(JNIEnv *env, jobject thiz, jstring key);
jint J4AC_ohos_media_extractor_Extractor__getIntValue__withCString(JNIEnv *env, jobject thiz, const char *key_cstr__);
jint J4AC_ohos_media_extractor_Extractor__getIntValue__withCString__catchAll(JNIEnv *env, jobject thiz, const char *key_cstr__);
jint J4AC_ohos_media_extractor_Extractor__readBuffer(JNIEnv *env, jobject thiz, jobject buf, jint offset);
jint J4AC_ohos_media_extractor_Extractor__readBuffer__catchAll(JNIEnv *env, jobject thiz, jobject buf, jint offset);
jlong J4AC_ohos_media_extractor_Extractor__getFrameTimestamp(JNIEnv *env, jobject thiz);
jlong J4AC_ohos_media_extractor_Extractor__getFrameTimestamp__catchAll(JNIEnv *env, jobject thiz);
jboolean J4AC_ohos_media_extractor_Extractor__next(JNIEnv *env, jobject thiz);
jboolean J4AC_ohos_media_extractor_Extractor__next__catchAll(JNIEnv *env, jobject thiz);
jboolean J4AC_ohos_media_extractor_Extractor__release(JNIEnv *env, jobject thiz);
jboolean J4AC_ohos_media_extractor_Extractor__release__catchAll(JNIEnv *env, jobject thiz);
int J4A_loadClass__J4AC_ohos_media_extractor_Extractor(JNIEnv *env);

#endif//J4A__ohos_media_extractor_Extractor__H
